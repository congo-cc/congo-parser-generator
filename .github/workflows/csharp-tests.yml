name: CSharp Generation Tests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
        - '**'
        - '!**/*.md'
        - '!.github/workflows/*.yml'
        - '.github/workflows/csharp-tests.yml'

  pull_request:
    branches: [ main ]
    paths:
        - '**'
        - '!**/*.md'
        - '!.github/workflows/*.yml'
        - '.github/workflows/csharp-tests.yml'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]
        java-version: ['17', '21']
        dotnet-version: ['5.0.x', '6.0.x', '7.0.x', '8.0.x']
        exclude:
            - os: windows-latest
              java-version: '17'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'oracle'
    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    # This next step is needed because we use dotnet 3.1.x to invoke IronPython
    # (for compatibility with the DLLs we build - .NET Framework doesn't support the
    # language features they use, so on Windows we need to invoke IronPython using
    # "dotnet /path/to/ipy.dll")
    - name: Setup dotnet 3.1.x (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '3.1.x'
    - name: Create test directories (POSIX)
      if: ${{ matrix.os != 'windows-latest' }}
      run: |
        mkdir -p ~/bin ~/logs
    - name: Create test directories (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        $dirs = "${env:USERPROFILE}/bin", "${env:USERPROFILE}/logs"
        foreach ($d in $dirs) {
          if (!(test-path $d)) {
            mkdir $d
          }
        }
    - name: Setup IronPython 2.7.11 (Ubuntu)
      if: ${{ matrix.os == 'ubuntu-22.04' }}
      run: |
        pwd
        echo ==================
        ls -l
        echo ==================
        wget -q https://github.com/IronLanguages/ironpython2/releases/download/ipy-2.7.11/ironpython_2.7.11.deb -O ironpython_2.7.11.deb
        sudo dpkg -i ironpython_2.7.11.deb
        ipy -V
    - name: Setup IronPython 2.7.11 (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        pwd
        echo ==================
        ls -l
        echo ==================
        wget -q https://github.com/IronLanguages/ironpython2/releases/download/ipy-2.7.11/IronPython-2.7.11.pkg -O IronPython-2.7.11.pkg
        sudo installer -pkg IronPython-2.7.11.pkg -target /
        ipy -V
    - name: Setup IronPython 2.7.11 (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        $source = 'https://github.com/IronLanguages/ironpython2/releases/download/ipy-2.7.11/IronPython.2.7.11.zip'
        $destination = "${env:USERPROFILE}/bin/IronPython.2.7.11.zip"
        Invoke-WebRequest -Uri $source -OutFile $destination
        Expand-Archive -Force $destination ${env:USERPROFILE}/bin/IronPython-2.7.11
    - name: Cache Jython (POSIX)
      if: ${{ (matrix.os != 'windows-latest') }}
      id: cache-jython-posix
      uses: actions/cache@v3
      with:
        path: ~/bin/jython.jar
        key: ${{ runner.os }}-jython
    - name: Setup Jython 2.7.2 (POSIX)
      if: ${{ (matrix.os != 'windows-latest') && (steps.cache-jython-posix.outputs.cache-hit != 'true') }}
      run: |
        wget https://repo1.maven.org/maven2/org/python/jython-standalone/2.7.2/jython-standalone-2.7.2.jar -O ~/bin/jython.jar
    - name: Cache Jython (Windows)
      if: ${{ (matrix.os == 'windows-latest') }}
      id: cache-jython-windows
      uses: actions/cache@v3
      with:
        path: ${env:USERPROFILE}/bin/jython.jar
        key: ${{ runner.os }}-jython
    - name: Setup Jython 2.7.2 (Windows)
      # Windows cache check temporarily disabled, as on Windows you can't restore to the correct location
      #if: ${{ matrix.os == 'windows-latest' && (steps.cache-jython-windows.outputs.cache-hit != 'true') }}
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        $source = 'https://repo1.maven.org/maven2/org/python/jython-standalone/2.7.2/jython-standalone-2.7.2.jar'
        $destination = "${env:USERPROFILE}/bin/jython.jar"
        Invoke-WebRequest -Uri $source -OutFile $destination
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Run tests
      run: |
        java -jar $HOME/bin/jython.jar --version
        ant -version
        python --version
        ant test-csharp
      env:
        PY_DEBUG: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
