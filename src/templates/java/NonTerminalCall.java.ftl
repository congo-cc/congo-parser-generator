/* Generated by: ${generated_by}. ${filename}${settings.copyrightBlurb} */
package ${settings.parserPackage};

[#var BaseTokenType = settings.treeBuildingEnabled?string("? extends Node.NodeType", settings.baseTokenClassName + ".TokenType")]

import java.io.PrintStream;
import java.util.Set;

public class NonTerminalCall {
    final TokenSource lexer;
    final String sourceFile;
    public final String productionName;
    final String parserClassName;
    final int line, column;
    final Set<${BaseTokenType}> followSet;

    public NonTerminalCall(String parserClassName, TokenSource lexer, String sourceFile, String productionName, int line, int column, Set<${BaseTokenType}> followSet) {
        this.parserClassName = parserClassName;
        this.lexer = lexer;
        this.sourceFile = sourceFile;
        this.productionName = productionName;
        this.line = line;
        this.column = column;
        this.followSet = followSet;
    }

    final TokenSource getTokenSource() {
        return lexer;
    }

    StackTraceElement createStackTraceElement() {
        return new StackTraceElement("${settings.parserClassName}", productionName, sourceFile, line);
    }

    public void dump(PrintStream ps) {
         ps.println(productionName + ":" + line + ":" + column);
    }
}
